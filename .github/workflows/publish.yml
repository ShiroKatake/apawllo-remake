name: Deploy to Itch.io üöÄ

on: 
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  
jobs:
  downloadBuilds:
    outputs:
      matrix_platform: ${{ steps.output_matrix_platform.outputs.upload_url }}
    name: Download ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - WebGL
          - StandaloneWindows64
    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: main.yml
          branch: master
          name: build-${{ matrix.platform }}
          path: build
      - id: output_matrix_platform
        run: echo "::set-output name=matrix_platform::${{ needs.downloadBuilds.outputs.matrix }}"
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.platform }}
          path: build/${{ matrix.platform }}
          
  publishBuilds:
    needs: downloadBuilds
    name: Deploy ${{ matrix.channel }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - html5
          - windows
    steps:
      - uses: josephbmanley/butler-publish-itchio-action@v1.0.2
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_API_KEY }}
          CHANNEL: ${{ matrix.channel }}
          ITCH_GAME: ${{ secrets.ITCH_GAME_ID }}
          ITCH_USER: ${{ secrets.ITCH_USERNAME }}
          PACKAGE: build-WebGL.zip # ${{ needs.downloadBuilds.outputs.matrix_platform }}"

  # notifyDiscord:
  #   needs: [releaseDraft, publishRelease]
  #   name: Notify on Discord üì¢
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Notify Success
  #       if: ${{ needs.publishRelease.result == 'success' }}
  #       uses: nobrayner/discord-webhook@v1
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         discord-webhook: ${{ secrets.WEBHOOK_URL }}
  #         username: '${{ github.workflow }}'
  #         avatar-url: 'https://media.discordapp.net/attachments/857447804977152000/894758305690452039/success_kid.png'
  #         title: 'New build status (${{ needs.releaseDraft.outputs.tag_name }}): SUCCESS!'
  #         description: |
  #           üìù View [Release Notes](https://github.com/ShiroKatake/apawllo-remake/releases/tag/${{ needs.releaseDraft.outputs.tag_name }})
  #           \u200B
  #           üåê Play [WebGL build](https://shirokatake.github.io/apawllo-remake/)
  #           \u200B
  #           üñ•Ô∏è Download [Win x64 build](https://github.com/ShiroKatake/apawllo-remake/releases/download/${{ needs.releaseDraft.outputs.tag_name }}/Apawllo-${{ needs.releaseDraft.outputs.tag_name }}.zip)
  #         include-details: 'false'
  #         color-success: '#2eb886'
          
  #     - name: Notify Failure
  #       if: ${{ needs.publishRelease.result != 'success' }}
  #       uses: nobrayner/discord-webhook@v1
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         discord-webhook: ${{ secrets.WEBHOOK_URL }}
  #         username: '${{ github.workflow }}'
  #         avatar-url: 'https://media.discordapp.net/attachments/857447804977152000/894760486439125042/explosion.png'
  #         title: 'New build status (${{ needs.releaseDraft.outputs.tag_name }}): FAILED . . .'
  #         description: 'Status of build phases'
  #         include-details: 'true'
  #         color-failure: '#a30200'
